version: '3.9'
services:

  user.data:
    image: redis:6.2.1
    networks:
      - apis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - apis
      - backend
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 10

  sql.data:
    build:
      context: ./
      dockerfile: ./appscore/Database/Dockerfile
    volumes:
      - D:\ProgramData\DockerDesktop\volumes\mssqlsrv2017:/var/opt/mssql/data
    networks:
      - apis
      - db
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "sqlcmd", "-S", "localhost", "-U", "sa", "-P", "root", "-Q", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  applicants.api:
    image: vicy20/applicants-api:latest
    environment:
      - ConnectionString=Server=sql.data;Database=dotnetgigs.applicants;User=sa;Password=Pass@word
      - HostRabbitmq=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - backend
      - db
      - apis
    ports:
      - "8081:80"

  service-api-jobs:
    image: vicy20/jobs-api:latest
    environment:
      - ConnectionString=Server=sql.data;Database=dotnetgigs.jobs;User=sa;Password=Pass@word
      - HostRabbitmq=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - backend
      - apis
    ports:
      - "8083:80"

  service-api-identity:
    image: vicy20/identity-api:latest
    environment:
      - RedisHost=user.data:6379
      - HostRabbitmq=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - backend
      - apis
    ports:
      - "8084:80"

  web:
    build:
      context: ./
      dockerfile: ./appscore/Web/Dockerfile
    environment:
      - HostRabbitmq=rabbitmq
    depends_on:
      - applicants.api
      - service-api-jobs
      - service-api-identity
    networks:
      - frontend
      - apis
    ports:
      - "8080:80"

networks:
  frontend:
    name: frontend
  apis:
    name: apis
    external: false
  backend:
    name: backend
    external : false
  db:
    name: db
    external: false